syntax = "proto3";

package HelloChattyProtocol;

// The greeting service definition.
service HelloChatty {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  // Accepts a message
  rpc NewMessage (NewMessageContent) returns (NewMessageSendingResult) {}

  // Subscribes to a stream of messages
  rpc SubscribeToMessages(RequestedChatInfo) returns (stream BroadcastedMessage) {}
}

// TODO: need a standard way of error returning
// via metadata in WriteResponseHeadersAsync ?
// via ResponseTrailers ?

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}
// The response message containing the greetings and the comma-separated list of names in the chat
message HelloReply {
  string motd = 1;
  string namesInChat = 2;
}

message RequestedChatInfo {
  string chatName = 1;
}

message NewMessageContent {
  string text = 1;
}
message NewMessageSendingResult {
  bool success = 1;
  string error = 2;
}

message BroadcastedMessage {
  string sender = 1;
  string text = 2;
  int64 filetime_utc = 3;
}
